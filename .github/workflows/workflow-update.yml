name: update-manifest
on: 
  workflow_dispatch:
    inputs:
      code-branch:
        description: 'branch of code repo'
        required: true
      tier: 
        description: 'the tier of the code repo'
        required: true
      app-name:
        description: 'name of the app'
        required: true
      code-repo:
        description: 'name of code repo'
        required: true
      default-input-flag:
        description: 'it specifies where to fetch input.yaml file'
        required: true
      backup-input-repo:
        description: 'the repo where backup input.files are stored'
        required: true
      
jobs:
  update-manifest:
    name: Update manifest
    runs-on: ubuntu-latest
    
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check existence of config.yaml 
        id: check_file
        uses: andstor/file-existence-action@v1
        with:
          files: "config.yaml"
      - name: Files don't exist
        if: steps.check_file.outputs.files_exists == 'false'
        run: |
          echo "failed"
          exit 1
      
      - name: Setup Python
        uses: actions/setup-python@v2
        with: 
          python-version: "3.x"
      - run: pip install PyYAML
        name: Install py dependencies

      - name: Validation of config file
        run: python scripts/validation-config-file.py

      - name: Create outputs from config file
        run: |
          echo "##[set-output name=source-repo-url;]$(python scripts/create-outputs-from-config.py source-repo-url)"
        id: from-config
  
      - name: Checkout code repo
        if: github.event.inputs.default-input-flag == 'false'
        uses: actions/checkout@v2
        with:
            repository: ${{ github.repository_owner }}/${{ github.event.inputs.code-repo}}
            token: ${{secrets.PAT_TOKEN}}
            ref: ${{ github.event.inputs.code-branch}}
            path: other-repo
      
      - name: Checkout backup input repo
        if: github.event.inputs.default-input-flag == 'true'
        uses: actions/checkout@v2
        with:
            repository: ${{ github.repository_owner }}/${{ github.event.inputs.backup-input-repo }}
            token: ${{secrets.PAT_TOKEN}}
            ref: master
            path: other-repo

      - if: github.event.inputs.default-input-flag == 'false'
        run: cp other-repo/input.yaml ./input.yaml
      
      - if: github.event.inputs.default-input-flag == 'true'
        run: |
          var="${{github.event.inputs.code-branch}}"
          if grep -q "master" <<< "$var"; then
          cp other-repo/default-input-files/prod/input.yaml ./input.yaml
          elif grep -q "features" <<< "$var"; then
          cp other-repo/default-input-files/feature/input.yaml ./input.yaml
          elif grep -q "releases" <<< "$var"; then
          cp other-repo/default-input-files/release/input.yaml ./input.yaml
          fi
      
      - name: set environment variables
        uses: allenevans/set-env@v2.0.0
        with:
          CODE_BRANCH:  ${{ github.event.inputs.code-branch}}
          TIER: ${{ github.event.inputs.tier}}
          APP_NAME: ${{github.event.inputs.app-name}}
          SOURCE_REPO_URL: ${{steps.from-config.outputs.source-repo-url}}

      - name: Update manifests
        run: python scripts/update-manifest.py
            
      - run: rm -f input.yaml
        
      - run: rm -rf other-repo/

      - name: Add and commit changes
        uses: EndBug/add-and-commit@v6
        with:
          message: 'updated manifests'
  
